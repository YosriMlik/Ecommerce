{
  "version": 3,
  "sources": ["../../vuex-persistedstate/node_modules/deepmerge/dist/cjs.js", "../../vuex-persistedstate/src/index.ts", "../../vuex-persistedstate/node_modules/shvl/dist/shvl.mjs"],
  "sourcesContent": ["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n", "import { Store, MutationPayload } from \"vuex\";\nimport merge from \"deepmerge\";\nimport * as shvl from \"shvl\";\n\ninterface Storage {\n  getItem: (key: string) => any;\n  setItem: (key: string, value: any) => void;\n  removeItem: (key: string) => void;\n}\n\ninterface Options<State> {\n  key?: string;\n  paths?: string[];\n  reducer?: (state: State, paths: string[]) => object;\n  subscriber?: (\n    store: Store<State>\n    ) => (handler: (mutation: any, state: State) => void) => void;\n  storage?: Storage;\n  getState?: (key: string, storage: Storage) => any;\n  setState?: (key: string, state: any, storage: Storage) => void;\n  filter?: (mutation: MutationPayload) => boolean;\n  arrayMerger?: (state: any[], saved: any[]) => any;\n  rehydrated?: (store: Store<State>) => void;\n  fetchBeforeUse?: boolean;\n  overwrite?: boolean;\n  assertStorage?: (storage: Storage) => void | Error;\n}\n\nexport default function <State>(\n  options?: Options<State>\n): (store: Store<State>) => void {\n  options = options || {};\n\n  const storage = options.storage || (window && window.localStorage);\n  const key = options.key || \"vuex\";\n\n  function getState(key, storage) {\n    const value = storage.getItem(key);\n\n    try {\n      return (typeof value === \"string\")\n        ? JSON.parse(value) : (typeof value === \"object\")\n        ? value : undefined;\n    } catch (err) {}\n\n    return undefined;\n  }\n\n  function filter() {\n    return true;\n  }\n\n  function setState(key, state, storage) {\n    return storage.setItem(key, JSON.stringify(state));\n  }\n\n  function reducer(state, paths) {\n    return Array.isArray(paths)\n      ? paths.reduce(function (substate, path) {\n          return shvl.set(substate, path, shvl.get(state, path));\n        }, {})\n      : state;\n  }\n\n  function subscriber(store) {\n    return function (handler) {\n      return store.subscribe(handler);\n    };\n  }\n\n  const assertStorage =\n    options.assertStorage ||\n    (() => {\n      storage.setItem(\"@@\", 1);\n      storage.removeItem(\"@@\");\n    });\n\n  assertStorage(storage);\n\n  const fetchSavedState = () => (options.getState || getState)(key, storage);\n\n  let savedState;\n\n  if (options.fetchBeforeUse) {\n    savedState = fetchSavedState();\n  }\n\n  return function (store: Store<State>) {\n    if (!options.fetchBeforeUse) {\n      savedState = fetchSavedState();\n    }\n\n    if (typeof savedState === \"object\" && savedState !== null) {\n      store.replaceState(\n        options.overwrite\n          ? savedState\n          : merge(store.state, savedState, {\n              arrayMerge:\n                options.arrayMerger ||\n                function (store, saved) {\n                  return saved;\n                },\n              clone: false,\n            })\n      );\n      (options.rehydrated || function () {})(store);\n    }\n\n    (options.subscriber || subscriber)(store)(function (mutation, state) {\n      if ((options.filter || filter)(mutation)) {\n        (options.setState || setState)(\n          key,\n          (options.reducer || reducer)(state, options.paths),\n          storage\n        );\n      }\n    });\n  };\n}\n", "function t(t,r,e){return void 0===(t=(r.split?r.split(\".\"):r).reduce(function(t,r){return t&&t[r]},t))?e:t}function r(t,r,e,n){return!/^(__proto__|constructor|prototype)$/.test(r)&&((r=r.split?r.split(\".\"):r.slice(0)).slice(0,-1).reduce(function(t,r){return t[r]=t[r]||{}},t)[r.pop()]=e),t}export{t as get,r as set};\n//# sourceMappingURL=shvl.mjs.map\n"],
  "mappings": "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",
  "names": ["isMergeableObject", "value", "stringValue", "Object", "prototype", "toString", "call", "$$typeof", "REACT_ELEMENT_TYPE", "Symbol", "for", "cloneUnlessOtherwiseSpecified", "options", "clone", "deepmerge", "Array", "isArray", "defaultArrayMerge", "target", "source", "concat", "map", "element", "getKeys", "keys", "getOwnPropertySymbols", "filter", "symbol", "propertyIsEnumerable", "propertyIsOnObject", "object", "property", "_", "arrayMerge", "sourceIsArray", "destination", "forEach", "key", "hasOwnProperty", "customMerge", "all", "array", "Error", "reduce", "prev", "next", "storage", "window", "localStorage", "getState", "getItem", "JSON", "parse", "undefined", "err", "setState", "state", "setItem", "stringify", "reducer", "paths", "substate", "path", "t", "r", "e", "n", "test", "split", "slice", "pop", "subscriber", "store", "handler", "subscribe", "assertStorage", "removeItem", "savedState", "fetchSavedState", "fetchBeforeUse", "replaceState", "overwrite", "merge", "arrayMerger", "saved", "rehydrated", "mutation"]
}
